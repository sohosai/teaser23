---
import { i18nAdapter, t, l } from "src/utils/i18n";
i18nAdapter.init(Astro);
import { Icon } from "astro-icon";

export type Props = {
  lang: string;
  label: string;
};
const { lang, label } = Astro.props;
---

<label>
  <span class="aria">{label}</span>
  <Icon name="ic:baseline-language" focusable="false" aria-hidden="true" role="img" />
  <select name="languages" onchange="window.location.pathname=this.value">
    {
      i18nAdapter.locales.map((code) => (
        <option value={l(Astro.url.pathname, code)} selected={code == lang}>
          {t("lang", code)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        </option>
      ))
    }
  </select>
</label>

<script></script>

<style lang="scss">
  label {
    position: relative;
    width: fit-content;
    height: fit-content;
    color: #aeaeae;
    mix-blend-mode: exclusion;
    > svg {
      position: absolute;
      top: 0;
      height: 100%;
      pointer-events: none;
    }
  }
  select {
    width: 0;
    width: 3em;
    padding: 0.55em 1.7rem;
    overflow: hidden;
    font-weight: 400;
    line-height: inherit;
    text-overflow: ellipsis;
    -webkit-appearance: none;
    cursor: pointer;
    background-color: rgba($font-white, 0.2);
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23aeaeae' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: 105%;
    background-size: 1.5em 1.5em;
    border-radius: 0.3em;
    outline: 1px lighten($font-black, 50%) solid;
    &:hover {
      outline: 1px lighten($font-black, 70%) solid;
    }
    &:focus {
      outline: 2px lighten($font-black, 70%) solid;
    }
  }
  option {
    font-size: 105%;
    color: $font-black;
    background-color: $background;
  }

  html[dir="rtl"] select {
    background-position: -5%;
  }
</style>
